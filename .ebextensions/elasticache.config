## https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/customize-environment-resources-elasticache.html
#Resources:
#  MyElastiCache:                           # defines our name of the resource (can be anything)
#    Type: "AWS::ElastiCache::CacheCluster" # defines the actual resource type
#    Properties:                            # we begin specifying options for our resource
#      CacheNodeType:
#        # Fn::GetOptionSetting is a function that gets a value from the EB option settings
#        # https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/ebextensions-functions.html#ebextensions-functions-getoptionsetting
#        Fn::GetOptionSetting:              # corresponds to an option_setting in the "aws:elasticbeanstalk:customoption" namespace
#          OptionName: "CacheNodeType"
#          DefaultValue: "cache.t2.micro"
#      NumCacheNodes:
#        Fn::GetOptionSetting:
#          OptionName: "NumCacheNodes"
#          DefaultValue: "1"
#      Engine:
#        Fn::GetOptionSetting:
#          OptionName: "Engine"
#          DefaultValue: "redis"
#      # For specifying a custom VPC
#      CacheSubnetGroupName:
#        Ref: "MyCacheSubnets"
#      VpcSecurityGroupIds:
#        - Ref: "MyCacheSecurityGroup"
#  MyCacheSecurityGroup:
#    Type: "AWS::EC2::SecurityGroup"
#    Properties:
#      GroupDescription: "Lock cache down to webserver access only"
#      # Custom VPC option
#      VpcId:
#        Fn::GetOptionSetting:
#          OptionName: "VpcId"
#      SecurityGroupIngress:
#        - IpProtocol: "tcp"
#          FromPort:
#            Fn::GetOptionSetting:
#              OptionName: "CachePort"
#              DefaultValue: "6379"
#          ToPort:
#            Fn::GetOptionSetting:
#              OptionName: "CachePort"
#              DefaultValue: "6379"
#          SourceSecurityGroupName:
#            # The parameter name, AWSEBSecurityGroup, is a fixed resource name provided by Elastic Beanstalk.
#            # You must add AWSEBSecurityGroup to your ElastiCache security group ingress rules in order for your
#            # Elastic Beanstalk application to connect to the instances in your ElastiCache cluster.
#            Ref: "AWSEBSecurityGroup"
#  # Custom VPC settings
#  MyCacheSubnets:
#    Type: "AWS::ElastiCache::SubnetGroup"
#    Properties:
#      Description: "Subnets for ElastiCache"
#      SubnetIds:
#        Fn::GetOptionSetting:
#          OptionName: "CacheSubnets"
#
## I dont know what this section does
#Outputs:
#  ElastiCache:
#    Description: "ID of ElastiCache Cache Cluster with Redis Engine"
#    Value:
#      Ref: "MyElastiCache"